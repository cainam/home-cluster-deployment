apiVersion: v1
kind: Service
metadata:
  name: startseite
  namespace: tools
spec:
  selector:
    app: startseite
  ports:
  - name: startseite
    protocol: TCP
    port: 1111
    targetPort: startseite
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: startseite
  namespace: tools
  labels:
    app: startseite
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: startseite
  name: startseite
  namespace: tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: startseite
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: startseite
    spec:
      containers:
      - name: startseite
        command: ["python"]
        args:
        - /meinkram/list_entry_points.py
        - --port=8080
        image: myregistry.adm13:443/mypython:3.10.5-slim
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        ports:
        - containerPort: 8080
          name: startseite
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /meinkram
          name: startseite
        - mountPath: /tmp
          name: tmp-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: startseite
      serviceAccountName: startseite
      terminationGracePeriodSeconds: 30
      volumes:
      - name: startseite
        persistentVolumeClaim:
          claimName: startseite
      - emptyDir: {}
        name: tmp-volume
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
subjects:
- kind: ServiceAccount
  name: startseite
  namespace: tools
roleRef:
  kind: ClusterRole
  name: pods-list
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: startseite
  namespace: tools


- name: app:{{ app }} set brick and disk path
  set_fact:
    brick: "{{ gluster_directory }}/bricks/{{ app }}/{{ storage.name }}"
    disk: "{{ gluster_directory }}/disks/app:{{ app }}-vol:{{ storage.name }}"

- name: app:{{ app }} ensure bricks for gluster
  shell: |
    set -e;
    # exit if gluster volume exists already, better: do it upfront and outside
    gluster vol list | grep "^{{ storage.name }}$" && exit
    echo "brick: {{ brick }}\ndisk: {{ disk }}"
    if [ -d "{{ brick }}" ] || [ -f "{{ disk }}"; then echo "either brick or disk exist already, please fix this manually"; exit -1; fi
    mkdir -p "{{ gluster_directory }}/disks"
    truncate -s "{{ storage.size }}B" "{{ disk }}";
    mkfs.ext4 "{{ disk }}";
    [ ! -d "{{ brick }}" ] && mkdir -p "{{ brick }}";
    mount "{{ disk }}" "{{ brick }}"
#  vars:
#    brick: "{{ gluster_directory }}/bricks/{{ app }}/{{ storage.name }}"
#    disk: "{{ gluster_directory }}/disks/app:{{ app }}-vol:{{ storage.name }}"
  loop_control:
    loop_var: storage
  register: brick_result

- name: show brick and disk
  debug:
    msg: "brick: {{ brick }} disk: {{disk}}"

config:
  cookieSecret: "7Yb4qhHeNE74dMDIloVtx2EaWbUr-dM6H6APRbrQOR4=" # https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview
  # cookieName: "_oauth2_proxy"    # Name of the cookie that oauth2-proxy creates, if not set defaults to "_oauth2_proxy"
  ssl_insecure_skip_verify: true
  configFile: |-
        email_domains = [ "*" ]        # Restrict to these E-Mail Domains, a wildcard "*" allows any email
        cookie_secret = "2I7BWFfNiFuBQdh4tEaFyuT8KnaPtNMMGLzP-uoG3YU="
        ssl_insecure_skip_verify = true
        redirect_url = "https://my-lb.adm13/oauth2-hydra/callback"
        cookie_domains = [".my-lb.adm13","*.my-lb.adm13","my-lb.adm13"]
        whitelist_domains = [".my-lb.adm13","*.my-lb.adm13","my-lb.adm13"]
        errors_to_info_log = true
        proxy_prefix = "/oauth2-hydra"
alphaConfig:
  enabled: true
  configData:
    providers:
    - clientID: "bf6043ef-ffea-4db7-bfaf-d1bb23139d85"       # IdP Client ID
      clientSecret: "oyoEa5qajmOqBFtJHWEg2iZhGli5nQu0"   # IdP Client Secret
      id: oidc-istio
      provider: oidc   # We use the generic 'oidc' provider
      #loginURL: https://my-lb.adm13:2005/realms/test/protocol/openid-connect/auth
#      loginURL: https://hydra.my-lb.adm13/oauth2/auth
#      redeemURL: http://hydra.auth:1121/oauth2/token
      profileURL: http://hydra-public.auth:4444/userinfo
#      validateURL: http://hydra.auth:1121/userinfo
      scope: "email openid"
      # scope: "openid email profile groups"
      #allowedGroups:
      #- admins # List all groups managed at our your IdP which should be allowed access
      oidcConfig:
        userIDClaim: sub  # Name of the claim in JWT containing the User ID
        emailClaim: sub
        #emailClaim: email.  # Name of the clain in JWT containing the E-Mail
#        emailClaim: email  # Name of the clain in JWT containing the E-Mail
#        groupsClaim: groups # Name of the claim in JWT containing the Groups
#        extraAudiences: 
#        - email
        audienceClaims:
        - aud
#        skipDiscovery: true # You can try using the well-knwon endpoint directly for auto discovery, here we won't use it
#        issuerURL: https://hydra.my-lb.adm13/
        issuerURL: https://my-lb.adm13/hydra
        jwksURL: http://hydra.auth:1121/
    upstreamConfig:
      upstreams:
        - id: static_200
          path: /
          static: true
          staticCode: 200
#          uri: https://open.my-lb.adm13/dummy
    # Headers that should be added to responses from the proxy
#    injectResponseHeaders: # Send this headers in responses from oauth2-proxy
#      - name: X-Auth-Request-Preferred-Username
#        values:
#          - claim: preferred_username
#      - name: X-Auth-Request-Email
#        values:
#          - claim: email
extraArgs:
  cookie-secure: "false"
  cookie-samesite: lax
  cookie-expire: 12h               # How long our Cookie is valid
  auth-logging: true               # Enable / Disable auth logs
  request-logging: true            # Enable / Disable request logs
  standard-logging: true           # Enable / Disable the standart logs
  show-debug-on-error: true        # Disable in production setups
  skip-provider-button: true       # We only have one provider configured (Keycloak)
  silence-ping-logging: true       # do not log health checks


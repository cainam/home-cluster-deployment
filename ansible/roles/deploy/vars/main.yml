---
applications:
  istio-system:
    base: 
      git: https://github.com/istio/istio.git
      branch: 1.17.3
      subdir: manifests/charts/base
    istiod: 
      git: https://github.com/istio/istio.git
      branch: 1.17.3
      subdir: manifests/charts/istio-control/istio-discovery
      helm_options: --set global.proxy.privileged=true --set global.tracing.zipkin.address=jaeger-collector.tools:9411 --set pilot.resources.requests.memory=164Mi {% raw %} {% if applications['istio-system']['istiod']['files']['config']['tempfile'] is defined %}  --values {{ applications['istio-system']['istiod']['files']['config']['tempfile'] }}  {% endif %}  {% endraw %}
      git_to_local_params: --fix_source=.pilot.image=istio/pilot:1.17.3 --fix_source=.global.proxy.image=istio/proxyv2:1.17.3 --fix_source=.global.proxy_init.image=istio/proxyv2:1.17.3
      files:
        config:
          file: istiod-mesh.yaml
    auth-policy:
      git: https://github.com/cainam/k8s_at_home.git
      subdir: auth-policy
      helm_options: --set PolicyName=ext-authz --set hosts[0]="my-lb.adm13"
  istio-ingress:
    gateway:
      git: https://github.com/istio/istio.git
      subdir: manifests/charts/gateway
      helm_options: --set service.ports[0].name=https,service.ports[0].port=443,service.ports[0].protocol=TCP,service.ports[0].targetPort=443 --set service.ports[1].name=keycloak,service.ports[1].port=2005,service.ports[1].protocol=TCP,service.ports[1].targetPort=12005
  auth:
    oauth2-proxy:
      git: https://github.com/oauth2-proxy/manifests.git
      subdir: helm/oauth2-proxy
      helm_options: --set proxyVarsAsSecrets=false {% raw %} {% if applications['auth']['oauth2-proxy']['files']['config']['tempfile'] is defined %}  --values {{ applications['auth']['oauth2-proxy']['files']['config']['tempfile'] }}  {% endif %}  {% endraw %}
      files:
        config:
          file: oauth2-proxy-config.yaml
      network:
        svcPort: 80
        prefix: /oauth2
    keycloak:
      git: https://github.com/cainam/charts/k8s_at_home.git
      subdir: keycloak
      helm_options: --set securityContext.runAsUser=100200 --set server.securityContext.fsGroup=100200 --set image.tag=21.1.1
      storage:
      - name: keycloak
        size: 1Gi
      network:
        gwPort: 2005
        targetPort: 12005
        svcPort: 1121
  home:
    common:
      git: https://github.com/k8s-at-home/library-charts.git
      subdir: charts/stable/common
      branch: common-4.5.2
      tcgit: https://github.com/truecharts/library-charts.git
      tcsubdir: library/common
      tcbranch: common-12.10.4
      tcgit_to_local_params: --fix_source=.wireguardImage.repository=no_needed --fix_source=.kubectlImage.repository=rancher/kubectl
      install: false
    gateway:
      git: https://github.com/istio/istio.git
      subdir: manifests/charts/gateway
      helm_options: --set 'service.externalIPs={"192.168.4.101"}' --set service.ports[0].name=https,service.ports[0].port=443,service.ports[0].protocol=TCP,service.ports[0].targetPort=443 --set name=ha-gw
    deconz:
      git: https://github.com/cainam/k8s_at_home.git
      subdir: charts/deconz
      affinity: k8s-2-int.adm13
      helm_options: --set nodeSelector.deconz=deconz --set securityContext.privileged=true --set env.DECONZ_DEVICE=/dev/ttyAMA0 --set persistence.config.enabled=true --set persistence.config.size=5Mi
      git_to_local_params: --fix_source=.image.tag=2.21.02 --fix_source=.env.DECONZ_VNC_MODE=0 --fix_source=.env.DEBUG_HTTP=1
      storage:
      - name: deconz-config
        size: 5Mi
      network:
        svcPort: 80
    home-assistant:
      git: https://github.com/cainam/k8s_at_home.git
      subdir: charts/home-assistant
      tcgit: https://github.com/truecharts/charts.git
      tcsubdir: charts/stable/home-assistant
      tcbranch: home-assistant-19.0.25
      tcggit_to_local_params: --fix_source=.image.tag=2023.5.3 --fix_source=.kubectlImage.repository=rancher/kubectl -fix_source=.kubectlImage.tag=v1.26.5
      git_to_local_params: --fix_source=.image.tag=2023.5.3 
      remove_dependencies: postgresql,mariadb,influxdb
      cm_helm_options: --set persistence.config.enabled=true --set persistence.config.type=configMap --set persistence.config.name=home-assistant-configuration --set configmap.config.enabled=true
      helm_options: --set persistence.config.enabled=true --set persistence.config.size=100Mi --reset-values
      tchelm_options: --reset-values --set persistence.config.enabled=true --set persistence.config.size=100Mi --set cnpg.main.enabled=false --set cnpg.main.creds.std=nix 
      storage:
      - name: home-assistant-config
        size: 100Mi
      network:
        prefix: /
        svcPort: 8123
        gateway: ha-gw
  tools:
    jaeger:
      git: https://github.com/jaegertracing/helm-charts.git
      subdir: charts/jaeger
      remove_dependencies: kafka,elasticsearch,cassandra,common
      helm_options: --set provisionDataStore.cassandra=false --set allInOne.enabled=true --set storage.type=none --set agent.enabled=false --set collector.enabled=false --set query.enabled=false --set allInOne.args[0]="--query.base-path=/jaeger"
      network:
        svcName: jaeger-query
        rewrite: /jaeger
        svcPort: 16686
      git_to_local_params: --fix_source=.allInOne.tag=1.45.0 --fix_source=.schema.image= --fix_source=.ingester.image= --fix_source=.agent.image=  --fix_source=.collector.image= --fix_source=.query.oAuthSidecar.image= --fix_source=.query.image= --fix_source=.spark.image= --fix_source=.esIndexCleaner.image= --fix_source=.esRollover.image= --fix_source=.esLookback.image= --fix_source=.hotrod.image.repository=
    infopage:
      git: https://github.com/cainam/k8s_at_home.git
      subdir: infopage
      storage:
      - name: infopage
        size: 5Mi
      network:
        xsvcPort: 1111
    kiali-operator:
      git: https://github.com/kiali/helm-charts.git
      subdir: kiali-operator 
      helm_options:  --set cr.create=true --set cr.spec.auth.strategy=anonymous --set cr.namespace=tools --set cr.spec.istio_namespace=istio-system --set allowAdHocKialiImage=true --set cr.spec.deployment.image_name=tools/kiali --set cr.spec.deployment.image_version=v1.68.0 --set cr.spec.external_services.prometheus.url="http://prometheus-server.tools/" --set cr.spec.external_services.prometheus.auth.insecure_skip_verify=true
      network:
        svcPort: 20001
        svcName: kiali
        prefix: /kiali
        rewrite: /kiali
      git_to_local_params: --fix_source=.image.repo=kiali/kiali-operator --fix_source=.image.tag=v1.68.0 --fix_source=.triggerPull.image=kiali/kiali:v1.68.0 
    kubernetes-dashboard:
      git: https://github.com/kubernetes/dashboard.git
      branch: v2.7.0
      subdir: charts/helm-chart/kubernetes-dashboard
      helm_options: --set protocolHttp=true --set service.externalPort=9090 --set extraArgs="{--enable-insecure-login=false}" --set serviceAccount.name=kubernetes-dashboard --set rbac.clusterReadOnlyRole=true
      network:
        prefix: /kubernetes-dashboard/
        svcPort: 9090
        addition: '"headers":{"request":{"add":{"x-forwarded-prefix":"/kubernetes-dashboard"}}}'
    kube-state-metrics:
      git: https://github.com/prometheus-community/helm-charts.git
      subdir: charts/kube-state-metrics
      branch: kube-state-metrics-4.30.0
      git_to_local_params: --fix_source=.image.tag=v2.8.0
      install: false
    prometheus-node-exporter:
      git: https://github.com/prometheus-community/helm-charts.git
      subdir: charts/prometheus-node-exporter
      branch: prometheus-node-exporter-4.8.1
      git_to_local_params: --fix_source=.image.tag=v1.5.0
      install: false
    prometheus-pushgateway:
      git: https://github.com/prometheus-community/helm-charts.git
      subdir: charts/prometheus-pushgateway
      branch: prometheus-pushgateway-2.1.6
      git_to_local_params: --fix_source=.image.tag=v1.5.1
      install: false
    prometheus:
      git: https://github.com/prometheus-community/helm-charts.git
      subdir: charts/prometheus
      helm_options: --set prometheus-node-exporter.hostRootFsMount.enabled=false --set server.persistentVolume.volumeName=prometheus-server --set server.securityContext.runAsUser=100100 --set server.securityContext.fsGroup=100100 --set server.prefixURL=/prometheus --set server.baseURL=https://my-lb.adm13/prometheus/ --set alertmanager.enabled=false
      remove_dependencies: alertmanager
      git_to_local_params: --fix_source=.server.image.tag=v2.44.0
      storage: 
      - name: storage-prometheus-alertmanager-0
        size: 2Gi
      - name: prometheus-server
        size: 8Gi
      network:
        svcName: prometheus-server
        rewrite: /prometheus


- name: set app fact
  set_fact:
    post_inst: "post_installation {{ namespace.key}} - "

#- name: "{{ post_inst }}determine namespaces of gateways"
  #shell: kubectl get pods --selector=istio="{{ item.key }}" -A -o jsonpath='{.items[*].metadata.namespace}'
  #register: ns_gw
  ## failed_when: ns_gw.stdout == ""
  #loop: "{{ gateways | dict2items }}"

#- name: "{{ post_inst }}output: determine namespaces of gateways"
  #debug: 
    #msg: "result: {{ item.rc }} out: {{ item.stdout }} for: {{ item.item.key }}"
  #loop: "{{ ns_gw.results  }}"
  #when: "'debug' in ansible_run_tags"

#- name: "{{ post_inst }}debug: determine namespaces of gateways"
  #debug:
    #msg: "item.item.key: {{ item.item.key | to_yaml }} item.stdout:{{ item.stdout| to_yaml }}"
  #loop: "{{ ns_gw.results  }}"

#- name: "{{ post_inst }}extend gateways by discovered namespaces - default gateway"
  #set_fact:
    #gateways: "{{ gateways | combine({item.gw_name: {'namespace': item.namespace }}, recursive=True) }}"
##    gateways: "{{ gateways | combine({item.item.key: {'namespace': item.stdout }}, recursive=True) }}"
##  loop: "{{ ns_gw.results  }}"
  #loop:
  #- gw_name: gateway
    #namespace: istio-ingress

- name: "{{ post_inst }}debug gateways"
  debug: 
    msg: "namespace.value | dict2items: {{ namespace.value | dict2items| to_yaml}}"
  when: "'debug' in ansible_run_tags"

- name: "{{ post_inst }}implement gateways"
  include_tasks: post_gateway.yml
  loop: "{{ namespace.value | dict2items }}"
  when: gateway.value.type is defined and gateway.value.type == 'gateway'
  loop_control:
    loop_var: gateway

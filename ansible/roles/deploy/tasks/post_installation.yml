- name: determine namespaces of gateways
  shell: kubectl get pods --selector=istio="{{ item.key }}" -A -o jsonpath='{.items[*].metadata.namespace}'
  register: ns_gw
  failed_when: ns_gw.stdout == ""
  loop: "{{ gateways | dict2items }}"

- debug: 
    msg: "result: {{ item.rc }} out: {{ item.stdout }} for: {{ item.item.key }}"
  loop: "{{ ns_gw.results  }}"
  when: "'debug' in ansible_run_tags"

- name: extend gateways by discovered namespaces
  set_fact:
    gateways: "{{ gateways | combine({item.item.key: {'namespace': item.stdout }}, recursive=True) }}"
  loop: "{{ ns_gw.results  }}"

- debug: 
    msg: "gateways: {{ gateways}}"
  when: "'debug' in ansible_run_tags"

- name: .{{ name_prefix }} gateways
  include_tasks: post_gateway.yml
  loop: "{{ gateways | dict2items }}"
  loop_control:
    loop_var: gateway

- name: list volumes to keep
  debug:
    msg: "{{ item }}"
  loop: "{{ keep_volumes }}"
  run_once: true

- name: list of existing volumes
  shell: gluster vol list
  run_once: true
  register: existing_volumes

- name: determine volumes for deletion
  set_fact:
    volume2delete: "{{ existing_volumes.stdout_lines | difference(keep_volumes) }}"
  run_once: true

- name: list volumes to delete
  debug:
    msg: "{{ item }}"
  loop: "{{ volume2delete }}"
  run_once: true

- block:
    - name: purge volumes - get bricks
      shell: |
        gluster vol info "{{ item }}" | grep "^Brick[0-9]" | cut -d : -f 3- | sort -u
      loop: "{{ volume2delete }}"
      run_once: true
      register: get_bricks_out

    - debug: var=get_bricks_out

    - name: purge volumes - delete volume
      gluster.gluster.gluster_volume:
        state: absent
        name: "{{ item }}"
      loop: "{{ volume2delete }}"
      run_once: true

    - name: purge volumes - delete bricks
      shell: |
        umount -v "{{ item.1 }}"
        echo "{{ item.1 }}" | grep -q "^/data/gluster/bricks/" && rm -rfv "{{ item.1 }}"
      #loop: "{{ get_bricks_out.stdout_lines }}"
      with_subelements:
         - "{{ get_bricks_out.results }}"
         - stdout_lines

  when: "'purge_volumes' in ansible_run_tags"


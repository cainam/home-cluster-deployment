---
- name: rc.conf
  lineinfile:
    path: /etc/rc.conf
    regexp: "^{{ item.setting }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.setting }}"
    backup: yes
  loop:
    - line: 'rc_cgroup_mode="legacy"'
      setting: rc_cgroup_mode
    - line: 'rc_cgroup_controllers=""'
      setting: rc_cgroup_controllers

- name: /var/lib/kubelet/config.yaml
  lineinfile:
    path: /var/lib/kubelet/config.yaml
    regexp: "^{{ item.setting }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.setting }}"
    backup: yes
    create: true
  loop:
    - line: 'cgroupDriver: cgroupfs'
      setting: 'cgroupDriver:'
    - line: 'staticPodPath: /etc/kubernetes/manifests'
      setting: 'staticPodPath:'
    - line: 'kind: KubeletConfiguration'
      setting: 'kind:'
    - line: 'apiVersion: kubelet.config.k8s.io/v1beta1'
      setting: 'apiVersion:'
  when: false

- name: deploy configuration files
  copy:
    src: "{{ item }}"
    dest: "/{{ item }}"
    mode: 0644
  loop:
    - etc/sysctl.d/k8s.conf
    - etc/modules-load.d/k8s.conf
    - etc/conf.d/kubelet

- name: enable kubelet service
  service:
    name: kubelet
    enabled: yes
    state: started

- name: check /var/lib/etcd
  stat:
    path: "/var/lib/etcd"
  register: etcd_data

- name: ensure /data/etcd exists
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.perm }}"
  loop:
    - path: /data/etcd
      perm: u=rwx,g=rx,o=rx

- name: ensure /var/lib/etcd is absent
  file:
    path: /var/lib/etcd
    state: absent
  when: not ( etcd_data.stat.islnk is defined and etcd_data.stat.islnk)

- name: create /var/lib/etcd link to /data/etcd
  file:
    src: "/data/etcd"
    dest: "/var/lib/etcd"
    owner: root
    group: root
    state: link
  when: not ( etcd_data.stat.islnk is defined and etcd_data.stat.islnk)


---

- name: gluster peering
  gluster_peer:
    state: present
    nodes:
      - "{{ item }}"
  loop: "{{ gluster_hosts }}"

- name: set app name
  set_fact:
    app: registry

- name: app:{{ app }} storage bricks
  include_tasks: common/storage_brick.yml
  vars:
    outside_k8s: true
  with_items:
    - name: registry
      size: 5G
  loop_control:
    loop_var: storage

- name: app:{{ app }} storage
  include_tasks: common/storage.yml
  vars:
    outside_k8s: true
  with_items:
    - name: registry
  loop_control:
    loop_var: storage
  run_once: true

- name: fstab
  lineinfile: 
    path: /etc/fstab
    regexp: "^/dev/sda1"
    line: "/dev/sda1               /data   ext4            noatime         0 1"
    backup: yes

- name: symlinks for CA
  file:
    src: "/data/mine/certs/myCA.pem"
    dest: "/etc/ssl/certs/myCA.pem"
    owner: root
    group: root
    state: link
  register: ca

- name: update CA certificates
  shell: /usr/sbin/update-ca-certificates
  when: ca.changed

- name: get ip
  shell: getent hosts $(hostname) | awk '{print $1}'
  changed_when: false
  register: myip

- name: ensure required directories exist
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.perm }}"
  loop:
    - path: /etc/modprobe.d
      perm: u=rwx,g=rx,o=rx
    - path: /etc/wpa_supplicant
      perm: u=rwx,g=rx,o=rx
    - path: "{{ shared_mounts }}"
      perm: u=rwx,g=rx,o=rx

- name: rc.conf
  lineinfile:
    path: /etc/rc.conf
    regexp: "^{{ item.setting }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.setting }}"
    backup: yes
  loop:
    - line: 'rc_logger="YES" # write rc logs to /var/log/rc.log, otherwise boot logs are lost'
      setting: rc_logger
    - line: 'rc_verbose="yes" # be verbose'
      setting: rc_verbose

- name: hostname in /etc/conf.d
  lineinfile:
    path: "/etc/conf.d/{{ item.file }}"
    regexp: "^{{ item.setting }}"
    line: "hostname=\"{{ item.line }}\""
    backup: yes
  loop:
    - line: "{{ hostvars[inventory_hostname].ansible_fqdn }}"
      setting: hostname
      file: hostname

- name: ntp-client conf
  lineinfile:
    path: /etc/conf.d/ntp-client
    regexp: "^{{ item.setting }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.setting }}"
    backup: yes
    create: yes
  loop:
    - line: 'rc_use="dns"'
      setting: rc_use
    - line: 'rc_need="net.wlan0"'
      setting: rc_need

- name: gentoo files
  copy:
    src: "{{ item.file }}"
    # dest: "{{ item.dest }}/{{ item.file }}"
    dest: "{{ item.dest }}"
    mode: preserve
    backup: yes
  loop:
    - file: world
      dest: /var/lib/portage/
    - file: gentoo.conf
      dest: /etc/portage/repos.conf/
    - file: ipv6.conf
      dest: /etc/modprobe.d/
    - file: hosts
      dest: /etc/
    - file: patches
      dest: /etc/portage/
    - file: portage/package.accept_keywords
      dest: /etc/portage
    - file: portage/package.use
      dest: /etc/portage/package.use
    - file: portage/package.license
      dest: /etc/portage
    - file: env
      dest: /etc/portage/
    - file: portage/package.env
      dest: /etc/portage
    - file: registry
      dest: /etc/init.d/
    - file: brickmount
      dest: /etc/init.d/
    - file: glustermount
      dest: /etc/init.d/
    - file: haproxy.cfg
      dest: /etc/haproxy/
    - file: keepalived.conf
      dest: /etc/keepalived/
    - file: keepalived
      dest: /etc/sysctl.d/
    - file: registries.conf
      dest: /etc/containers/
    - file: conf.d/glusterd
      dest: /etc/conf.d/

- name: include wlan secrets
  include_vars: ../wlan

- name: make.conf, wpa_supplicant.conf, /etc/conf.d/net
  template:
    src: "{{ item.file }}"
    dest: "{{ item.dest }}"
    backup: yes 
  loop:
    - file: make.conf
      dest: "/etc/portage/make.conf"
    - file: wpa_supplicant.conf
      dest: "/etc/wpa_supplicant/wpa_supplicant.conf"
    - file: net
      dest: "/etc/conf.d/net"
    - file: conf.d/registry
      dest: /etc/conf.d/
    - file: conf.d/glustermount
      dest: /etc/conf.d/


- name: symlinks for services
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    state: link
  loop:
    - src: net.lo
      dest: /etc/init.d/net.eth0
    - src: net.lo
      dest: /etc/init.d/net.wlan0

- name: enable services
  service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
  loop:
    - net.wlan0
    - net.eth0
    - ntp-client
    - brickmount
    - glustermount
    - keepalived
    - registry
    - haproxy

- name: emerge sync
  shell: emerge --sync
  when: "'emerge' in ansible_run_tags" # instead of using tags:, because it is not possible to use never inside here, when it is already used on the outside
  
- name: emerge build
  shell: emerge --verbose --update --deep --newuse --with-bdeps=y @world
  when: gentoo_build is defined and 'emerge' in ansible_run_tags
 
- name: emerge deploy
  shell: emerge --verbose --update --deep --newuse --with-bdeps=y @world
  when: gentoo_build is not defined and 'emerge' in ansible_run_tags
  

- name: images
  debug:
    msg: "img: {{ item }}"
  loop: "{{ images  }}"
  run_once: true

- name: tempdir for build
  tempfile:
    state: directory
    suffix: "-build-image"
  register: build_dir

- name: copy local dockerfiles
  copy:
    src: "{{ item }}"
    dest: "{{ build_dir.path }}"
    mode: 0644
  loop:
    - mypython.dockerfile

- name: build
  shell: |
    set -x
    if [ "{{ item.dockerfile | default('') }}" = "" ]; then # nothing to build, try pull-push
      echo "{{ item.platform | default(default_platform) }} {{ item.source }}:{{ item.branch }} {{ item.section | default("") }}" | pull-tag-push.sh
      exit $?
    fi
    if [ "{{ item.source }}" != "local" ]; then
      git clone --branch "{{ item.branch }}" "{{ item.source }}"
      git_dir=$(basename "{{ item.source }}")
      git_dir=${git_dir%%.git}
      cd "${git_dir}"
    fi
    image="{{ my_registry }}/{{ item.name }}:{{ item.branch }}"
    podman build . {{ item.build_args | default("--tls-verify") }} --file "{{ item.dockerfile | default('whoCares') }}" --tag "{{ my_registry }}/{{ item.name }}:{{ item.branch }}"
    podman push "{{ my_registry }}/{{ item.name }}:{{ item.branch }}"
  args:
    chdir: "{{ build_dir.path }}"
  loop: "{{ images  }}"
  run_once: true
  register: build_out

- debug: var=build_out


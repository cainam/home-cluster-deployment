- name: set app fact
  set_fact:
    app: "{{ application.key }}"
    name_prefix: "namespace:{{ k8s_namespace.key }} app:{{ application.key }} -"
  run_once: true

- block:
  - name: "{{ name_prefix }} empty variable storage_new array" # don't remove this, the variable has to be purge for each iteration
    set_fact:
      storage_new: []
      
  - name: "{{ name_prefix }} set default_storage_type if not set explicitely"
    vars:
      entry: "{{ item | combine ( {'type': item.type | default(default_storage_type) } ) }}"
    set_fact:
      storage_new: "{{ (storage_new | default([]) ) + [entry] }}"
    loop: "{{ application.value.storage }}"
      
  - name: "{{ name_prefix }} dump new storage array"
    debug:
      msg: "new storage array for application {{ application.key }}: \n{{ storage_new | to_nice_yaml }}"

  - name: "{{ name_prefix }} replace storage in applications"
    set_fact: 
      applications: "{{ applications | combine(
         {k8s_namespace.key : 
           {application.key: 
              {'storage': storage_new}
          }}, recursive=true)}}"

  run_once: true
  when: application.value.storage is defined

- block:
  - name: "{{ name_prefix }} storage brick"
    include_tasks: common/storage_brick.yml
    when: application.value.storage is defined
    with_items: "{{ applications[k8s_namespace.key][application.key].storage }}"
    loop_control:
      loop_var: storage
  - name: "{{ name_prefix }} storage"
    include_tasks: common/storage.yml
    with_items: "{{ applications[k8s_namespace.key][application.key].storage }}"
    run_once: true
    loop_control:
      loop_var: storage
  - name: "{{ name_prefix }} install storage content"
    include_tasks: storage_content.yml
    when: storage.config is defined and storage.config
    with_items: "{{ applications[k8s_namespace.key][application.key].storage }}"
    loop_control:
      loop_var: storage
  when: application.value.storage is defined
  
